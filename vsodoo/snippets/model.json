{
    "create model": {
        "prefix": "odmd",
        "body": [
            "from odoo import api, fields, models, _",
            "\r",
            "\r",
            "class $1(models.Model):",
            "\t_name = \"$2\"",
            "\t_description = \"$3\"",
            "\t_inherit=\"$4\""
        ],
        "description": "create a new odoo model."
    },
    "inherit model":{
        "prefix": "odmin",
        "body": [
            "from odoo import api, fields, models, _",
            "\r",
            "\r",
            "class $1(models.Model):",
            "\t_inherit=\"$2\""
        ],
        "descripition": "inherit a odoo model."
    },
    "import odoo":{
        "prefix":"odim",
        "body":[
            "from odoo import api, fields, models, _"
        ]
    },
    "create transient model":{
        "prefix": "odtm",
        "body":[
            "class $1(models.TransientModel):",
            "\t_name=\"$2\"\t",
            "\t_description = \"$3\""
        ],
        "description": "create a new TransientModel Class."
    },
    "inheirt mail thread & mail activitiy":{
        "prefix":"odmail",
        "body":[
            "_inherit =  ['mail.thread','mail.activity.mixin']"
        ],
        "descripition": "inherit mail thread and mail activity."
    },
    "create model without import": {
        "prefix": "odmds",
        "body": [
            "class $1(models.Model):",
            "\t_name = \"$2\"",
            "\t_description = \"$3\"",
            "\t_inherit=\"$4\""
        ],
        "description": "create a new odoo model without any imports."
    },
    "odoo model char field.": {
        "prefix": "odfc",
        "body": [
            "$1 = fields.Char('$2')"
        ],
        "descritption": "create Char type field."
    },
    " odoo model boolean type": {
        "prefix": "odfb",
        "body": [
            "$1 = fields.Boolean('$2')"
        ],
        "description": "create Boolean type field."
    },
    "odoo model many2one simple":{
        "prefix": "odfm2",
        "body":[
            "$1 = fields.Many2one('$2', string='$3')"
        ],
        "description":"create Many2one field with simple args."
    },
    "odoo model many2one type": {
        "prefix": "odfm2o",
        "body": [
            "$1 = fields.Many2one('$2', string='$3', ondelete='${4|restrict,no action,cascade,set null,set default|}', required=${5|True,False|})"
        ],
        "description": "Create Many2one type field."
    },
    "odoo model Many2many field":{
        "prefix": "odfm2m",
        "body": [
            "$1 = fields.Many2many('$2',string='$3')"
        ],
        "description": "Add Many2many type field."
    },
    "odoo model Monetary field":{
        "prefix": "odfmoney",
        "body":[
            "$1 = fields.Monetary('$2'')"
        ],
        "description": "create Monetary fields."
    },
    "odoo model currency_id":{
        "prefix": "odfcurrency",
        "body":[
            "currency_id = fields.Many2one('res.currency',string='currency')"
        ],
        "description": "Add currency id to model."
    },
    "odoo model integer type": {
        "prefix": "odfint",
        "body": [
            "$1 = fields.Integer('$2')"
        ],
        "description": "create Integer type field."
    },
    "odoo model selection type": {
        "prefix": "odfselect",
        "body": [
            "$1 = fields.Selection(selection='$2',string='$3',default='$4')"
        ],
        "description": "create Selection type field."
    },
    "import odoo logger": {
        "prefix": "odlogger",
        "body": [
            "import logging",
            "$1",
            "_logger = logging.getLogger(__name__)"
        ],
        "description": "import logger using odoo"
    },
    "odoo logger info": {
        "prefix": "odinfo",
        "body": [
            "_logger.info($1)"
        ],
        "description": "logger info message."
    },
    "odoo logger debug": {
        "prefix": "oddebug",
        "body": [
            "_logger.debug($1)"
        ],
        "description": "logger debug message"
    },
    "odoo logger warn": {
        "prefix": "odwarn",
        "body": [
            "_logger.warning($2)"
        ],
        "description": "logger warning message"
    },
    "odoo logger error": {
        "prefix": "oderror",
        "body": [
            "_logger.error($1)"
        ],
        "description": "logger error message."
    },
    "odoo model create": {
        "prefix": "odcreate",
        "body": [
            "@api.model",
            "def create(self,vals):",
            "\t$1"
        ],
        "description": "model create method."
    },
    "odoo onchange method": {
        "prefix": "odonchange",
        "body": [
            "@api.onchange('$1')",
            "def _onchange_$1(self):",
            "\t\"\"\"$2\"\"\"",
            "\t$3"
        ],
        "description": "create onchange method with specific field."
    },
    "odoo write method": {
        "prefix": "odwrite",
        "body": [
            "@api.multi",
            "def write(self,vals):",
            "\t$1"
        ],
        "description": "write method with values."
    },
    "override name_get method": {
        "prefix": "odnameget",
        "body": [
            "@api.multi",
            "def name_get(self):",
            "\t$1"
        ],
        "description": "override name_get method."
    },
    "odoo depends decorator": {
        "prefix": "odepends",
        "body": [
            "@api.depends('$1')",
            "def $2"
        ],
        "description": "create depends decorator."
    },
    "override private _name_search method": {
        "prefix": "od_namesearch",
        "body": [
            "@api.model",
            "def _name_search(self, name, args=${1:None}, operator='${2|ilike,=,!=,>,>=,<,<=,like,in,not in,child_of,parent_left,parent_right|}', limit=${3:100}, name_get_uid=${4:None}):",
            "\t$5"
        ],
        "description": "override private implementation of name search method."
    },
    "override name search method": {
        "prefix": "odnamesearch",
        "body": [
            "@api.model",
            "def name_search(self,name, args=${1:None}, operator='${2|ilike,=,!=,>,>=,<,<=,ilike,in,not in,child_of,parent_left,parent_right|}', limit=${3:100})",
            "\t$4"
        ],
        "description": "override name search method."
    },
    "override unlink method": {
        "prefix": "odunlink",
        "body": [
            "@api.multi",
            "def unlink(self):",
            "\t$1"
        ],
        "description": "override unlink method."
    },
    "Add Datetime Type Field": {
        "prefix": "odfd",
        "body": [
            "$1 = fields.Datetime('$2',help='$3')"
        ],
        "description": "Add Datetime Type Field."
    },
    "Add Float Type Field": {
        "prefix": "odff",
        "body": [
            "$1 = fields.Float('$2',help='$3')"
        ],
        "description": "Add Float Type Field."
    },
    "Add One2many Field": {
        "prefix": "odfo2m",
        "body": [
            "$1 = fields.One2many('$2','$3',string='$4')"
        ],
        "description": "Add One2many Field."
    },
    "Add Text Field": {
        "prefix": "odftext",
        "body": [
            "$1 = fields.Text('$2',help='$3')"
        ],
        "description": "Add Text Field."
    },
    "Return Action URL": {
        "prefix": "odact_url",
        "body": [
            "return {",
            "\t\"type\": \"ir.actions.act_url\"",
            "\t\"url\": $1",
            "\t\"target\": \"new\"",
            "}"
        ],
        "description": "Return An Action URL in New Window"
    }
}